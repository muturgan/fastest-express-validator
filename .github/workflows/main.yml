name: MORE CI FOR THE CI GOD!

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

jobs:
  quality_checking_and_publishing:
    name: quality_checking_and_publishing
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: 20
        registry-url: https://registry.npmjs.org/

    - name: Check license
      run: node tools/check_license.cjs

    - name: Install dependencies
      run: npm ci

    - name: Audit vulnerabilities
      run: npm run audit

    - name: Linting
      run: npm run lint_ci

    - name: Build
      run: npm run build

    - name: Test
      run: npm run test_coverage

    - name: Calculate (and check) Coverage
      run: |
        echo "COVERAGE=$(node tools/check_coverage.cjs)" >> $GITHUB_ENV
        echo "COVERAGE_COLOR=$(node tools/get_coverage_color.cjs)" >> $GITHUB_ENV

    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: fev_coverage.json
        label: coverage
        message: ${{ env.COVERAGE }}
        color: ${{ env.COVERAGE_COLOR }}
        namedLogo: mocha
        logoColor: white

    - if: github.ref == 'refs/heads/master'
      name: Check published versions
      run: echo "NEED_PUBLISH=$(node tools/publish.helper.cjs)" >> $GITHUB_ENV

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Remove a dist folder from gitignore
      run: sed -i '$ d' .gitignore

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Install zopfli
      run: sudo apt-get install zopfli

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Compress with a default archiver
      run: npm pack

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Gunzip a package
      run: gunzip fastest-express-validator-*.tgz

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Compress with a zopfli archiver
      run: zopfli --i100 fastest-express-validator-*.tar

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Rename a package file
      run: find . -name '*.tar.gz' -exec sh -c 'mv "$0" "${0%.tar.gz}.tgz"' {} \;

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Publish
      run: npm publish fastest-express-validator-*.tgz
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
