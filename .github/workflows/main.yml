name: MORE CI FOR THE CI GOD!

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize

jobs:
  quality_checking:
    name: quality_checking
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: 14
        registry-url: https://registry.npmjs.org/

    - name: Remove a dist folder from gitignore
      run: sed -i '$ d' .gitignore

    - name: Install dependencies
      run: npm ci

    - name: Audit vulnerabilities
      run: npm run audit

    - name: Linting
      run: npm run lint_ci

    - name: Build
      run: npm run build

    - name: Test
      run: npm run test

    - name: Calculate Coverage
      run: |
        echo "COVERAGE=$(node -pe 'JSON.parse(process.argv[1]).total.branches.pct + "%"' "$(cat coverage/coverage-summary.json)")" >> $GITHUB_ENV
        echo "COVERAGE_COLOR=$(node tools/get_coverage_color.cjs)" >> $GITHUB_ENV

    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: fev_coverage.json
        label: coverage
        message: ${{ env.COVERAGE }}
        color: ${{ env.COVERAGE_COLOR }}
        namedLogo: mocha
        logoColor: white

    - name: Check coverage
      run: npm run check_coverage


  npm_publishing:
    name: npm_publishing
    if: github.ref == 'refs/heads/master'
    needs:
      - quality_checking
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@master

    - name: Check published versions
      run: echo "NEED_PUBLISH=$(node tools/publish.helper.cjs)" >> $GITHUB_ENV

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Install dependencies
      run: npm ci

    - if: ${{ env.NEED_PUBLISH == 'true' }}
      name: Publish
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}